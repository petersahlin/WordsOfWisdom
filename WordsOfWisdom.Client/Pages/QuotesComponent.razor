@using WordsOfWisdom.Client.Services
@using WordsOfWisdom.Data.DTOs
@using WordsOfWisdom.Data.Responses
@inject IQuotesService QuotesService



<div class="quote-container">
    <h1>@currentQuote?.Text</h1>
    <p>- @currentQuote?.Author</p>
    <button class="button-33" @onclick="GetNextQuote">Get Another Quote</button>
</div>










@code {
    private List<QuoteDTO> quotesCache = new();
    private QuoteDTO? currentQuote;

    protected override async Task OnInitializedAsync()
    {
        await FetchQuotesBatch();
        await GetNextQuote();
    }

    private async Task FetchQuotesBatch()
    {
        var quotesResult = await QuotesService.GetQuotes();
        if (quotesResult.Quotes != null)
        {
            quotesCache.AddRange(quotesResult.Quotes);
        }
    }

    private async Task GetNextQuote()
    {
        if (quotesCache.Count == 0)
        {
            await FetchQuotesBatch();
        }

        if (quotesCache.Count > 0)
        {
            currentQuote = quotesCache[0];
            quotesCache.RemoveAt(0);
        }
    }
}
